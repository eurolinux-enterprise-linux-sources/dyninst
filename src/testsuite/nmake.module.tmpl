#
# Common makefile template for dyninst Tests.  This file is not intended to
# be a useful Makefile in isolation; instead, it should be included
# from within an architecture-specific Makefile.
#
# $Id: nmake.module.tmpl,v 1.5 2008/10/30 19:15:44 legendre Exp $
#

SUITE_NAME	= Dyninst
RELEASE_NUM	= 6.0

DEST		= $(TO_CORE)\$(PROGRAM_DEST)\testsuite

CXXFLAGS     = $(CXXFLAGS) -Dos_windows_test -Darch_x86_test -Dcap_relocation_test \
	-Dcap_stripped_binaries_test -Dcap_async_events_test -Dcap_threads_test -Di386_unknown_nt4_0_test \
	-Di386-unknown-nt4.0_test
CXXFLAGS     = $(CXXFLAGS) -I$(TO_CORE)/dyninstAPI/h -I$(TO_CORE)/external \
	-I$(TO_CORE)/dynutil/h -I$(TO_CORE)/symtabAPI/h -I$(TO_CORE)/testsuite/src \
	-I$(TO_CORE)/instructionAPI/h /D_DEBUG /Zi -Dsnprintf=_snprintf \
	-D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE
CXXFLAGS_NORM = $(CXXFLAGS) -I$(TO_CORE)/testsuite/src 
CFLAGS       = $(CFLAGS) /Zi /D_DEBUG -I$(TO_CORE)/h

LIBS		= $(TO_CORE)\$(LIBRARY_DEST)\dyninstAPI.lib $(TO_CORE)\$(LIBRARY_DEST)\common.lib $(TO_CORE)\$(LIBRARY_DEST)\instructionAPI.lib

SYSLIBS		=

LIBTESTSUITE = libtestSuite.dll
LIBDYNINSTCOMP = libtestdyninst.dll
LIBSYMTABCOMP = libtestsymtab.dll
LIBINSTRUCTIONCOMP = libtestinstruction.dll
LIBPROCCONTROLCOMP = libtestproccontrol.dll

MUTATOR_LIBS = libtestdyninst.lib libtestSuite.lib dyninstAPI.lib libtestsymtab.lib symtabAPI.lib common.lib libtestinstruction.lib instructionAPI.lib libtestproccontrol.lib proccontrol.lib parseAPI.lib

SRCS_LIBTESTSUITE = ../src/test_lib.C \
                    ../src/test_lib_dllExecution.C \
                    ../src/TestData.C \
                    ../src/TestMutator.C \
                    ../src/TestOutputDriver.C \
                    ../src/StdOutputDriver.C \
					../src/remotetest.C \
					../src/connection.C \
					../src/module.C

SRCS_LIBTESTLAUNCH = ../src/CmdLine.C \
					 ../src/ParameterDict.C \
					 ../src/ResumeLog.C \
					 ../src/MutateeStart.C \
                     ../src/test_info_new.C \
					 ../i386-unknown-nt4.0/test_info_new.gen.C

SRCS_DYNINSTCOMP = ../src/dyninst/dyninst_comp.C \
                   ../src/dyninst/test_lib_mutateeStart.C \
                   ../src/dyninst/Callbacks.C \
                   ../src/dyninst/Process_data.C


SRCS_DYNINSTTESTLIB = ../src/libtestA.c \
                      ../src/libtestB.c \
                      ../src/dyninst/libInstMe.c \
                      ../src/dyninst/libLoadMe.c
!ifdef M_ABI
DYNINST_TESTLIBS = $(SRCS_DYNINSTTESTLIB:.c=.dll)
DYNINST_TESTLIBS = $(DYNINST_TESTLIBS:../src/dyninst/=)
DYNINST_TESTLIBS = $(DYNINST_TESTLIBS:../src/=)
# no ABIs on windows yet, this should be $src_$m_abi.dll
DYNINST_TESTLIBS_ABI =
!else
DYNINST_TESTLIBS = $(SRCS_DYNINSTTESTLIB:.c=.dll)
DYNINST_TESTLIBS = $(DYNINST_TESTLIBS:../src/dyninst/=)
DYNINST_TESTLIBS = $(DYNINST_TESTLIBS:../src/=)
DYNINST_TESTLIBS_ABI =
!endif

TESTLIBS = $(DYNINST_TESTLIBS)

DYNINST_TESTLIBS_OBJS = $(SRCS_DYNINSTTESTLIB:.c=.obj)
DYNINST_TESTLIBS_OBJS = $(DYNINST_TESTLIBS_OBJS:../src/dyninst/=)

SRCS_SYMTABCOMP = ../src/symtab/symtab_comp.C

OBJS_LIBTESTSUITE = $(SRCS_LIBTESTSUITE:.C=.obj) $(SRCS_LIBTESTLAUNCH:.C=.obj)
OBJS_LIBTESTSUITE = $(OBJS_LIBTESTSUITE:../src/=)

OBJS_DYNINSTCOMP = $(SRCS_DYNINSTCOMP:.C=.obj)
OBJS_DYNINSTCOMP = $(OBJS_DYNINSTCOMP:../src/dyninst/=)

OBJS_SYMTABCOMP = $(SRCS_SYMTABCOMP:.C=.obj)
OBJS_SYMTABCOMP = $(OBJS_SYMTABCOMP:../src/symtab/=)

SRCS_TEMPLATES = ../src/test_driver_templates.C
OBJS_TEMPLATES = $(SRCS_TEMPLATES:.C=.obj)
OBJS_TEMPLATES = $(OBJS_TEMPLATES:../src/=)

SRCS_INSTRUCTIONCOMP = ../src/instruction/instruction_comp.C

OBJS_INSTRUCTIONCOMP = $(SRCS_INSTRUCTIONCOMP:.C=.obj)
OBJS_INSTRUCTIONCOMP = $(OBJS_INSTRUCTIONCOMP:../src/instruction/=)

SRCS_PROCCONTROLCOMP = ../src/proccontrol/proccontrol_comp.C

OBJS_PROCCONTROLCOMP = $(SRCS_PROCCONTROLCOMP:.C=.obj)
OBJS_PROCCONTROLCOMP = $(OBJS_PROCCONTROLCOMP:../src/proccontrol/=)


TESTDRIVER_LIBS = dyninstAPI.lib libtestSuite.lib libtestdyninst.lib libtestsymtab.lib libtestinstruction.lib

all: $(LIBTESTSUITE) $(LIBDYNINSTCOMP) $(LIBSYMTABCOMP) $(LIBINSTRUCTIONCOMP) $(LIBPROCCONTROLCOMP) test_driver.exe runTests.exe mutators mutatees DatabaseOutputDriver.dll libtestA.dll libtestB.dll


UNCOMMON_INSTALL=true

install: all

# try not to have clean remove dbghelp.dll
clean:
	$(RM) *.ilk
	$(RM) *.exp
	$(RM) *.lib
	$(RM) *.obj
	$(RM)	$(TESTDRIVER_LIBS) libtestA.dll libtestB.dll libtestsymtab.dll test*.dll
	$(RM) *.exe
	$(RM) *.pdb

# Old Install commands if we actually want to install
# -$(MKDIR) $(DEST)
# for %X IN ( $(LIBTESTSUITE) test_driver.exe runTests.exe $(TEST_LIBS) $(MUTATEES) libtestA.dll libtestB.dll ) DO $(CP) "%X" $(DEST)

LDFLAGS = /debug -LIBPATH:$(TO_CORE)/../lib ws2_32.lib /DYNAMICBASE:NO
LIBS    = dyninstAPI.lib symtabAPI.lib instructionAPI.lib proccontrol.lib stackwalk.lib common.lib

$(LIBTESTSUITE): $(OBJS_LIBTESTSUITE) ../src/test_lib.h
	$(LINK) $(LDFLAGS)  -DLL -out:$@ $(OBJS_LIBTESTSUITE)

$(LIBDYNINSTCOMP): $(OBJS_DYNINSTCOMP) ../src/test_lib.h
	$(LINK) $(LDFLAGS)  -DLL -out:$@ $(OBJS_DYNINSTCOMP) $(LIBS) libtestSuite.lib

$(LIBSYMTABCOMP): $(OBJS_SYMTABCOMP) ../src/test_lib.h
	$(LINK) $(LDFLAGS)  -DLL -out:$@ $(OBJS_SYMTABCOMP) $(LIBS) libtestSuite.lib

$(LIBPROCCONTROLCOMP): $(OBJS_PROCCONTROLCOMP) ../src/test_lib.h
	$(LINK) $(LDFLAGS)  -DLL -out:$@ $(OBJS_PROCCONTROLCOMP) $(LIBS) libtestSuite.lib ws2_32.lib


$(LIBINSTRUCTIONCOMP): $(OBJS_INSTRUCTIONCOMP) ../src/test_lib.h
	$(LINK) $(LDFLAGS)  -DLL -out:$@ $(OBJS_INSTRUCTIONCOMP) $(LIBS) libtestSuite.lib

$(OBJS_LIBTESTSUITE): $(SRCS_LIBTESTSUITE) $(SRCS_LIBTESTLAUNCH)
	$(CXX) $(CXXFLAGS_NORM) -DTESTLIB_DLL_BUILD -Dnative_cc=VC.exe -Dnative_cxx=_VC++.exe -I../src/ -c $**

$(OBJS_DYNINSTCOMP): $(SRCS_DYNINSTCOMP)
	$(CXX) $(CXXFLAGS_NORM) -DCOMPLIB_DLL_BUILD -DTESTLIB_DLL_BUILD -Dnative_cc=VC.exe -Dnative_cxx=_VC++.exe -I../src/ -c $**

$(OBJS_SYMTABCOMP): $(SRCS_SYMTABCOMP)
	$(CXX) $(CXXFLAGS_NORM) -DCOMPLIB_DLL_BUILD -DTESTLIB_DLL_BUILD -Dnative_cc=VC.exe -Dnative_cxx=_VC++.exe -I../src/ -c $**

$(OBJS_PROCCONTROLCOMP): $(SRCS_PROCCONTROLCOMP)
	$(CXX) $(CXXFLAGS_NORM) -DCOMPLIB_DLL_BUILD -DTESTLIB_DLL_BUILD -Dnative_cc=VC.exe -Dnative_cxx=_VC++.exe -I../src/ -c $**


$(OBJS_INSTRUCTIONCOMP): $(SRCS_INSTRUCTIONCOMP)
	$(CXX) $(CXXFLAGS_NORM) -DCOMPLIB_DLL_BUILD -DTESTLIB_DLL_BUILD -Dnative_cc=VC.exe -Dnative_cxx=_VC++.exe -I../src/ -c $**

$(DYNINST_TESTLIBS_OBJS) : $(SRCS_DYNINSTTESTLIB)
	$(CC) -c $(LDFLAGS) $(CFLAGS) $(CFLAGS_TESTLIBS)$**

$(DYNINST_TESTLIBS): $(DYNINST_TESTLIBS_OBJS)
	$(LINK) $(TESTLIB_FLAGS) /base:@dlls.txt,$* $*.obj -out:$@


#CXXTFLAGS := $(filter-out -fno-implicit-templates, $(CXXFLAGS))

$(OBJS_TEMPLATES): $(SRCS_TEMPLATES)
	$(CXX) $(CXXFLAGS) -Dnative_cc=VC.exe -Dnative_cxx=_VC++.exe -I../src/ -c $**

test_info_new.gen.obj: test_info_new.gen.C
	$(CXX) $(CXXFLAGS_NORM) -Dnative_cc=VC.exe -Dnative_cxx=_VC++.exe -I../src/ -c $**

test_driver.exe:  test_driver.obj dynlmon.obj $(LIBTESTSUITE)
	$(LINK) $(LDFLAGS) test_driver.obj dynlmon.obj $(TESTDRIVER_LIBS)

test_driver.obj: ../src/test_driver.C
	$(CXX) $(CXXFLAGS_NORM) -Dnative_cc=_VC.exe -Dnative_cxx=_VC++.exe -c $**

runTests.exe: runTests.obj runTests-utils-nt.obj $(OBJS_TEMPLATES)
	$(LINK) $(LDFLAGS) runTests.obj runTests-utils-nt.obj $(OBJS_TEMPLATES)

runTests.obj:  ../src/runTests.C
	$(CXX) $(CXXFLAGS_NORM) -c $**
runTests-utils-nt.obj: ../src/runTests-utils-nt.C
	$(CXX) $(CXXFLAGS_NORM) -c $**

DatabaseOutputDriver.obj: ../src/DatabaseOutputDriver.C
	$(CXX) $(CXXFLAGS_NORM) -c -I../src/ $**

DatabaseOutputDriver.dll: DatabaseOutputDriver.obj
# Advapi32.lib needed for GetUserName, Ws2_32.lib required for gethostname
	$(LINK) $(LDFLAGS) -DLL -out:$@ $(TESTDRIVER_LIBS) Advapi32.lib Ws2_32.lib $**
