#Don't add tests or parseThat to Everything
Everything = dynutil common elf dwarf symlite symtabAPI instructionAPI parseAPI patchAPI proccontrol stackwalk dyninstAPI_RT dyninstAPI dynC_API

Common          = dynutil common
Dwarf           = ${Common} dwarf
Elf             = ${Common} elf
SymLite         = ${Elf} symlite
SymtabAPI       = ${Common} ${Elf} ${Dwarf} symtabAPI
InstructionAPI  = ${Common} instructionAPI
ParseAPI        = ${Common} ${SymtabAPI} ${SymLite} ${InstructionAPI} parseAPI
DataflowAPI     = ${ParseAPI}
PatchAPI        = ${ParseAPI} patchAPI
ProcControlAPI  = ${SymLite} proccontrol
DynC_API        = ${DyninstAPI} dynC_API
Dyner           = ${DyninstAPI} dyner

StackwalkerAPI  = ${ProcControlAPI}
ifndef WITHOUT_PARSE_API
StackwalkerAPI += ${ParseAPI} ${InstructionAPI}
endif
ifndef WITHOUT_SYMTAB_API
StackwalkerAPI += ${SymtabAPI}
endif
StackwalkerAPI += stackwalk

DyninstAPI      = ${Common} ${SymtabAPI} ${InstructionAPI} ${PatchAPI} ${ProcControlAPI} ${SymLite} ${StackwalkerAPI}  dyninstAPI_RT dyninstAPI

ValueAdded = valueAdded/sharedMem

#List of tests
Everything_tests = testsuite parseThat

#Map of directories to dependencies.  Use sort to remove duplicates
dynutil = 
common = $(sort $(Common))
symlite = $(sort $(SymLite))
elf = $(sort $(Elf))
dwarf = $(sort $(Dwarf))
symtabAPI = $(sort $(SymtabAPI))
instructionAPI = $(sort $(InstructionAPI))
proccontrol = $(sort $(ProcControlAPI))
stackwalk = $(sort $(StackwalkerAPI))
parseAPI = $(sort $(ParseAPI))
dataflowAPI = $(sort $(ParseAPI))
patchAPI = $(sort $(PatchAPI))
dyninstAPI = $(sort $(DyninstAPI))
parseThat = $(sort $(DyninstAPI) parseThat)
dynC_API = $(sort $(DynC_API))
dyner = $(sort $(Dyner))
valueAdded = $(sort $(DyninstAPI) valueAdded/sharedMem)

#List all components with tests here
testsuite = testsuite
test_comps = symtabAPI instructionAPI patchAPI proccontrol dyninstAPI all

DEFAULT_COMPONENT ?= default
PLATFORM_DEFAULT_COMPONENT ?= $(Everything)

ifeq ($(DEFAULT_COMPONENT),default)
fullSystem= $(PLATFORM_DEFAULT_COMPONENT)
else
ifeq ($(DEFAULT_COMPONENT),SymtabAPI)
fullSystem = $(symtabAPI)
else
ifeq ($(DEFAULT_COMPONENT),StackwalkerAPI)
fullSystem = $(stackwalk)
else
ifeq ($(DEFAULT_COMPONENT),DyninstAPI)
fullSystem	= $(dyninstAPI)
else
ifeq ($(DEFAULT_COMPONENT),InstructionAPI)
fullSystem = $(instructionAPI)
else
ifeq ($(DEFAULT_COMPONENT),ProcControlAPI)
fullSystem = $(proccontrol)
else
ifeq ($(DEFAULT_COMPONENT),ParseAPI)
fullSystem = $(parseAPI)
else
ifeq ($(DEFAULT_COMPONENT),DataflowAPI)
fullSystem = $(parseAPI)
else
ifeq ($(DEFAULT_COMPONENT),PatchAPI)
fullSystem = $(patchAPI)
else
default:
	@echo Error: Build system does not have a valid default component: $(DEFAULT_COMPONENT)
endif # PatchAPI
endif # DataflowAPI
endif # ParseAPI
endif # ProcControlAPI
endif # InstructionAPI
endif # DyninstAPI
endif # StackwalkerAPI
endif # SymtabAPI
endif # default

ifndef DONT_BUILD_NEWTESTSUITE
ifeq ($(findstring dyninstAPI,$(fullSystem)),dyninstAPI)
BUILD_PARSETHAT ?= true
endif
testsuites += testsuite
fullSystem += testsuite
ifeq (x$(BUILD_PARSETHAT),xtrue)
testsuites += parseThat
fullSystem += parseThat
testsuite: parseThat
testsuite_install: parseThat_install
endif
endif

fullSystem_install = $(patsubst %,%_install,$(fullSystem))
Everything_install = $(patsubst %,%_install,$(Everything))
Everything_tests_install = $(patsubst %,%_install,$(Everything_tests))

Test_targets = $(patsubst %,%_testsuite,$(test_comps))

fullSystem_notests = $(filter-out testsuite,$(filter-out parseThat,$(fullSystem)))
fullSystem_install_notests = $(filter-out testsuite_install,$(filter-out parseThat_install,$(fullSystem_install)))
